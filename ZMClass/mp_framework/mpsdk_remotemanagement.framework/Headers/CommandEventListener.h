/**
 *  Copyright (c) 2018, MasterCard International Incorporated and/or its
 *  affiliates. All rights reserved.
 *
 *  The contents of this file may only be used subject to the MasterCard
 *  Mobile Payment SDK for MCBP and/or MasterCard Mobile MPP UI SDK
 *  Materials License.
 *
 *  Please refer to the file LICENSE.TXT for full details.
 *
 *  TO THE EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
 *  WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 *  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *  NON INFRINGEMENT. TO THE EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 *  MASTERCARD OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 **/

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from CommandEventListener.djinni

#import <Foundation/Foundation.h>
@class RemoteManagementCommand;
@class Exception;
@protocol DigitizedCard;
@protocol SingleUseKey;
@class Exception;
@class RemoteManagementCommand;
@protocol DigitizedCard;
@protocol SingleUseKey;


/**
 * Auto-generated Djinni interface for ::mpsdk::remotemanagement::commands::CommandEventListener_t
 * 
 * Provides feedback from the commands
 * 
 */
@protocol CommandEventListener

/**
 * 
 * The Delete Token command has completed successfully
 * @param command the command
 * @param cardId Card Identifier
 * 
 */
- (void)onDeleteTokenCommandCompleted:(RemoteManagementCommand* _Nonnull)command
                               cardId:(NSString* _Nonnull)cardId;

/**
 * 
 * The Delete Token Command has failed
 * @param command the command
 * @param cardId Card Identifier
 * @param errorCode the error code
 * @param errorMessage the error message
 * @param exception the exception
 * 
 */
- (void)onDeleteTokenCommandFailed:(RemoteManagementCommand* _Nonnull)command
                            cardId:(NSString* _Nonnull)cardId
                         errorCode:(NSString* _Nullable)errorCode
                      errorMessage:(NSString* _Nullable)errorMessage
                         exception:(Exception* _Nonnull)exception;

/**
 * 
 * The system health command has successfully completed
 * @param command the command
 * 
 */
- (void)onGetSystemHealthCommandCompleted:(RemoteManagementCommand* _Nonnull)command;

/**
 * 
 * The system health command has failed
 * @param command the command
 * @param errorCode the error code
 * @param errorMessage the error message
 * @param exception the exception
 * 
 */
- (void)onGetSystemHealthCommandFailed:(RemoteManagementCommand* _Nonnull)command
                             errorCode:(NSString* _Nullable)errorCode
                          errorMessage:(NSString* _Nullable)errorMessage
                             exception:(Exception* _Nonnull)exception;

/**
 * 
 * The get task status command has successfully completed
 * @param command the command
 * @param taskStatus the status of the requested task
 * 
 */
- (void)onGetTaskStatusCommandCompleted:(RemoteManagementCommand* _Nonnull)command
                             taskStatus:(NSString* _Nonnull)taskStatus;

/**
 * 
 * The get task status command has failed
 * @param command the command
 * @param errorCode the error code
 * @param errorMessage the error message
 * @param exception the exception
 * 
 */
- (void)onGetTaskStatusCommandFailed:(RemoteManagementCommand* _Nonnull)command
                           errorCode:(NSString* _Nullable)errorCode
                        errorMessage:(NSString* _Nullable)errorMessage
                           exception:(Exception* _Nonnull)exception;

/**
 * 
 * The notify token provisioning result command has failed
 * @param command the command
 * 
 */
- (void)onNotifyProvisioningResultCommandCompleted:(RemoteManagementCommand* _Nonnull)command;

/**
 * 
 * The notify token provisioning result command has failed
 * @param command the command
 * @param tokenUniqueReference card identifier
 * @param errorCode the error code
 * @param errorMessage the error message
 * @param exception the exception
 * 
 */
- (void)onNotifyProvisioningResultCommandFailed:(RemoteManagementCommand* _Nonnull)command
                           tokenUniqueReference:(NSString* _Nullable)tokenUniqueReference
                                      errorCode:(NSString* _Nullable)errorCode
                                   errorMessage:(NSString* _Nullable)errorMessage
                                      exception:(Exception* _Nonnull)exception;

/**
 * 
 * The provision command has completed
 * @param command the command
 * @param digitizedCardProfile the profile that has been provisioned
 * @param cardId the card id
 * 
 */
- (void)onProvisionCommandCompleted:(RemoteManagementCommand* _Nonnull)command
               digitizedCardProfile:(id<DigitizedCard> _Nonnull)digitizedCardProfile
                             cardId:(NSString* _Nonnull)cardId;

/**
 * 
 * The provision command has failed
 * @param command the command
 * @param errorCode the error code
 * @param errorMessage the error message
 * @param exception the exception
 * 
 */
- (void)onProvisionCommandFailed:(RemoteManagementCommand* _Nonnull)command
            tokenUniqueReference:(NSString* _Nullable)tokenUniqueReference
                       errorCode:(NSString* _Nullable)errorCode
                    errorMessage:(NSString* _Nullable)errorMessage
                       exception:(Exception* _Nonnull)exception;

/**
 * 
 * The request session command has completed
 * @param command the command
 * 
 */
- (void)onRequestSessionCommandCompleted:(RemoteManagementCommand* _Nonnull)command;

/**
 * 
 * The request session command has failed
 * @param command the command
 * @param errorCode the error code
 * @param errorMessage the error message
 * @param exception the exception
 * 
 */
- (void)onRequestSessionCommandFailed:(RemoteManagementCommand* _Nonnull)command
                            errorCode:(NSString* _Nullable)errorCode
                         errorMessage:(NSString* _Nullable)errorMessage
                            exception:(Exception* _Nonnull)exception;

/**
 * 
 * The replenish command has completed
 * @param command the command
 * @param cardId the card id
 * @param requestId the request id
 * @param singleUseKeys the new transaction credentials
 * 
 */
- (void)onReplenishCommandCompleted:(RemoteManagementCommand* _Nonnull)command
                             cardId:(NSString* _Nonnull)cardId
                          requestId:(NSString* _Nonnull)requestId
                      singleUseKeys:(NSArray<id<SingleUseKey>>* _Nonnull)singleUseKeys;

/**
 * 
 * The replenish command has failed
 * @param command the command
 * @param tokenUniqueReference Card Identifier
 * @param errorCode the error code
 * @param errorMessage the error message
 * @param exception the exception
 * 
 */
- (void)onReplenishCommandFailed:(RemoteManagementCommand* _Nonnull)command
            tokenUniqueReference:(NSString* _Nullable)tokenUniqueReference
                       errorCode:(NSString* _Nullable)errorCode
                    errorMessage:(NSString* _Nullable)errorMessage
                       exception:(Exception* _Nonnull)exception;

/**
 * 
 * The change card PIN command has completed
 * @param command the command
 * @param cardId the card id
 * @param requestId the request id
 * 
 */
- (void)onChangeCardPinCommandCompleted:(RemoteManagementCommand* _Nonnull)command
                                 cardId:(NSString* _Nonnull)cardId
                              requestId:(NSString* _Nonnull)requestId;

/**
 * 
 * The change card PIN command has failed
 * @param tokenUniqueReference token unique reference of the cared
 * @param pinTriesRemaining number of tries remaining
 * @param command the command
 * @param errorCode the error code
 * @param errorMessage the error message
 * @param exception the exception
 * 
 */
- (void)onChangeCardPinCommandFailed:(NSString* _Nullable)tokenUniqueReference
                   pinTriesRemaining:(int32_t)pinTriesRemaining
                             command:(RemoteManagementCommand* _Nonnull)command
                           errorCode:(NSString* _Nullable)errorCode
                        errorMessage:(NSString* _Nullable)errorMessage
                           exception:(Exception* _Nonnull)exception;

/**
 * 
 * The set card PIN command has completed
 * @param command the command
 * @param cardId the card id
 * @param requestId the request id
 * 
 */
- (void)onSetCardPinCommandCompleted:(RemoteManagementCommand* _Nonnull)command
                              cardId:(NSString* _Nonnull)cardId
                           requestId:(NSString* _Nonnull)requestId;

/**
 * 
 * The set card PIN command has failed
 * @param tokenUniqueReference token unique reference of the card
 * @param pinTriesRemaining number of tries remaining
 * @param command the command
 * @param errorCode the error code
 * @param errorMessage the error message
 * @param exception the exception
 * 
 */
- (void)onSetCardPinCommandFailed:(NSString* _Nullable)tokenUniqueReference
                pinTriesRemaining:(int32_t)pinTriesRemaining
                          command:(RemoteManagementCommand* _Nonnull)command
                        errorCode:(NSString* _Nullable)errorCode
                     errorMessage:(NSString* _Nullable)errorMessage
                        exception:(Exception* _Nonnull)exception;

/**
 * 
 * The set wallet PIN command has completed
 * @param command the command
 * @param requestId the request id
 * 
 */
- (void)onSetWalletPinCommandCompleted:(RemoteManagementCommand* _Nonnull)command
                             requestId:(NSString* _Nonnull)requestId;

/**
 * 
 * The set wallet PIN command has failed
 * @param pinTriesRemaining number of tries remaining
 * @param command the command
 * @param errorCode the error code
 * @param errorMessage the error message
 * @param exception the exception
 * 
 */
- (void)onSetWalletPinCommandFailed:(int32_t)pinTriesRemaining
                            command:(RemoteManagementCommand* _Nonnull)command
                          errorCode:(NSString* _Nullable)errorCode
                       errorMessage:(NSString* _Nullable)errorMessage
                          exception:(Exception* _Nonnull)exception;

/**
 * 
 * The change wallet PIN command has completed
 * @param command the command
 * @param requestId the request id
 * 
 */
- (void)onChangeWalletPinCommandCompleted:(RemoteManagementCommand* _Nonnull)command
                                requestId:(NSString* _Nonnull)requestId;

/**
 * 
 * The change wallet PIN command has failed
 * @param pinTriesRemaining number of tries remaining
 * @param command the command
 * @param errorCode the error code
 * @param errorMessage the error message
 * @param exception the exception
 * 
 */
- (void)onChangeWalletPinCommandFailed:(int32_t)pinTriesRemaining
                               command:(RemoteManagementCommand* _Nonnull)command
                             errorCode:(NSString* _Nullable)errorCode
                          errorMessage:(NSString* _Nullable)errorMessage
                             exception:(Exception* _Nonnull)exception;

/**
 * 
 * Event raised to provide taskId generated for card mobile pin
 * @param cardId cardId The identifier of the card whose PIN change is requested
 * @param taskId taskId The identifier of the task change mobile pin
 * 
 */
- (void)onChangeCardMobilePinStarted:(NSString* _Nonnull)cardId
                              taskId:(NSString* _Nonnull)taskId;

/**
 * 
 * Event raised to provide taskId generated for wallet pin
 * @param taskId taskId The identifier of the task change wallet pin
 * 
 */
- (void)onChangeWalletMobilePinStarted:(NSString* _Nonnull)taskId;

@end
