/**
 *  Copyright (c) 2018, MasterCard International Incorporated and/or its
 *  affiliates. All rights reserved.
 *
 *  The contents of this file may only be used subject to the MasterCard
 *  Mobile Payment SDK for MCBP and/or MasterCard Mobile MPP UI SDK
 *  Materials License.
 *
 *  Please refer to the file LICENSE.TXT for full details.
 *
 *  TO THE EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
 *  WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 *  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *  NON INFRINGEMENT. TO THE EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 *  MASTERCARD OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 **/

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from RequestSessionCommand.djinni

#import "mpsdk_remotemanagement/CommandFailureAction.h"
#import "mpsdk_componentinterface/HttpMethod.h"
#import "mpsdk_remotemanagement/CommandFailureAction.h"
#import "mpsdk_componentinterface/HttpMethod.h"
#import <Foundation/Foundation.h>
@protocol HttpManager;
@protocol RemoteManagementCrypto;
@protocol SessionContextProvider;
@protocol WalletIdentificationDataProvider;
@protocol CommandEventListener;
@protocol CommunicationParametersProvider;
@protocol CommunicationRetryParametersProvider;
@class CmsDBaseResponse;
@class Exception;
@class CmsDBaseResponse;
@class Exception;


/** Auto-generated Djinni interface for ::mpsdk::remotemanagement::commands::impl::RequestSessionCommand_t */
@interface RequestSessionCommand : NSObject

- (id _Nonnull)init:(NSString* _Nonnull)requestId httpManager:(id<HttpManager> _Nonnull)httpManager remoteManagementCrypto:(id<RemoteManagementCrypto> _Nonnull)remoteManagementCrypto sessionContextProvider:(id<SessionContextProvider> _Nonnull)sessionContextProvider walletIdentificationDataProvider:(id<WalletIdentificationDataProvider> _Nonnull)walletIdentificationDataProvider commandEventListener:(id<CommandEventListener> _Nonnull)commandEventListener communicationParametersProvider:(id<CommunicationParametersProvider> _Nonnull)communicationParametersProvider communicationRetryParametersProvider:(id<CommunicationRetryParametersProvider> _Nonnull)communicationRetryParametersProvider;

/**
 * 
 * Retrieve the URL used for this command
 * @returns the URL used for this command
 * 
 */
- (NSString* _Nonnull)getCommandUrl;

- (NSString* _Nonnull)getUrlEndPoint;

- (BOOL)isSessionRequired;

/**
 * 
 * Once the command has completed, the response can be deserialized
 * @param serializedResponse the decrypted, serialized response
 * @returns the deserialized Remote Management Command
 * 
 */
- (CmsDBaseResponse* _Nonnull)deserializeResponse:(NSData* _Nonnull)serializedResponse;

/**
 * 
 * The command was successfully processed and does not contain an error code
 * @param response the response
 * 
 */
- (void)onCommandSuccessful:(CmsDBaseResponse* _Nonnull)response;

/**
 * 
 * The command has failed
 * @param action the action to perform
 * @param errorCode the error code
 * @param errorDescription the error description
 * @param exception the exception (if available)
 * 
 */
- (void)onCommandFailed:(CommandFailureAction)action
              errorCode:(NSString* _Nullable)errorCode
       errorDescription:(NSString* _Nullable)errorDescription
              exception:(Exception* _Nonnull)exception;

/**
 * 
 * Executes the command
 * 
 */
- (void)execute;

/**
 * 
 * Cancels the execution of the command
 * 
 */
- (void)cancel;

- (HttpMethod)getHttpMethod;

- (NSString* _Nullable)getTaskId;

@end
