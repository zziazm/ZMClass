/**
 *  Copyright (c) 2018, MasterCard International Incorporated and/or its
 *  affiliates. All rights reserved.
 *
 *  The contents of this file may only be used subject to the MasterCard
 *  Mobile Payment SDK for MCBP and/or MasterCard Mobile MPP UI SDK
 *  Materials License.
 *
 *  Please refer to the file LICENSE.TXT for full details.
 *
 *  TO THE EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
 *  WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 *  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *  NON INFRINGEMENT. TO THE EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 *  MASTERCARD OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 **/

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from NotifyProvisioningResultCommand.djinni

#import "mpsdk_componentinterface/HttpMethod.h"
#import "mpsdk_remotemanagement/CommandFailureAction.h"
#import "mpsdk_componentinterface/HttpMethod.h"
#import <Foundation/Foundation.h>
@protocol HttpManager;
@protocol RemoteManagementCrypto;
@protocol SessionContextProvider;
@protocol WalletIdentificationDataProvider;
@protocol CommandEventListener;
@protocol CommunicationParametersProvider;
@protocol CommunicationRetryParametersProvider;
@class SessionContext;
@class CmsDBaseResponse;
@class Exception;

/**
 * 
 * The values used to populate the result to send to the CMS-D
 * 
 */
extern NSString * __nonnull const NotifyProvisioningResultCommand_RESULT_SUCCESS;
extern NSString * __nonnull const NotifyProvisioningResultCommand_RESULT_ERROR;


#import "mpsdk_remotemanagement/BaseRemoteManagementCommand.h"

/** Auto-generated Djinni interface for ::mpsdk::remotemanagement::commands::impl::NotifyProvisioningResultCommand_t */
@interface NotifyProvisioningResultCommand : BaseRemoteManagementCommand

- (id _Nonnull)init:(NSString* _Nonnull)requestId httpManager:(id<HttpManager> _Nonnull)httpManager remoteManagementCrypto:(id<RemoteManagementCrypto> _Nonnull)remoteManagementCrypto sessionContextProvider:(id<SessionContextProvider> _Nonnull)sessionContextProvider walletIdentificationDataProvider:(id<WalletIdentificationDataProvider> _Nonnull)walletIdentificationDataProvider commandEventListener:(id<CommandEventListener> _Nonnull)commandEventListener communicationParametersProvider:(id<CommunicationParametersProvider> _Nonnull)communicationParametersProvider tokenUniqueReference:(NSString* _Nonnull)tokenUniqueReference errorCode:(NSString* _Nonnull)errorCode errorDescription:(NSString* _Nonnull)errorDescription result:(NSString* _Nonnull)result communicationRetryParametersProvider:(id<CommunicationRetryParametersProvider> _Nonnull)communicationRetryParametersProvider sessionContext:(SessionContext* _Nonnull)sessionContext;

/**
 * 
 * Executes the command
 * 
 */
- (void)execute;

/**
 * 
 * Cancels the execution of the command
 * 
 */
- (void)cancel;

- (HttpMethod)getHttpMethod;

/**
 * 
 * Retrieve the URL used for this command
 * @returns the URL used for this command
 * 
 */
- (NSString* _Nonnull)getUrlEndPoint;

- (NSString* _Nullable)getTaskId;

@end
