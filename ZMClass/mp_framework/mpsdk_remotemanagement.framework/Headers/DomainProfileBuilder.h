/**
 *  Copyright (c) 2018, MasterCard International Incorporated and/or its
 *  affiliates. All rights reserved.
 *
 *  The contents of this file may only be used subject to the MasterCard
 *  Mobile Payment SDK for MCBP and/or MasterCard Mobile MPP UI SDK
 *  Materials License.
 *
 *  Please refer to the file LICENSE.TXT for full details.
 *
 *  TO THE EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
 *  WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 *  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *  NON INFRINGEMENT. TO THE EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 *  MASTERCARD OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 **/

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from DomainProfileBuilder.djinni

#import <Foundation/Foundation.h>
@protocol DigitizedCard;
@protocol Records;
@class LocalDekEncryptedData;
@protocol AlternateContactlessPaymentData;
@protocol DigitizedCardProfile;
@class DekEncryptedData;
@class RMKekEncryptedData;
@protocol RemoteManagementCrypto;
@class RecordsJson;
@class IccPrivateKeyCrtComponentsJson;
@class AlternateContactlessPaymentDataJson;
@class AlternateContactlessPaymentDataJson;
@class DekEncryptedData;
@class IccPrivateKeyCrtComponentsJson;
@class LocalDekEncryptedData;
@class RMKekEncryptedData;
@class RecordsJson;
@protocol AlternateContactlessPaymentData;
@protocol DigitizedCard;
@protocol DigitizedCardProfile;
@protocol Records;
@protocol RemoteManagementCrypto;


/** Auto-generated Djinni interface for ::mpsdk::remotemanagement::json::profile::DomainProfileBuilder_t */
@interface DomainProfileBuilder : NSObject

- (id _Nonnull)init;

+ (id<DigitizedCard> _Nonnull)build:(id<DigitizedCardProfile> _Nonnull)cardProfile
                           dekEncryptedIccKek:(DekEncryptedData* _Nonnull)dekEncryptedIccKek
                              encryptedDekKey:(RMKekEncryptedData* _Nonnull)encryptedDekKey
                                 cryptoEngine:(id<RemoteManagementCrypto> _Nonnull)cryptoEngine;

+ (NSArray<id<Records>>* _Nonnull)buildRecords:(NSArray<RecordsJson*>* _Nonnull)records;

+ (LocalDekEncryptedData* _Nonnull)buildIccComponents:(IccPrivateKeyCrtComponentsJson* _Nonnull)iccPrivateKeyCrtComponents;

+ (id<AlternateContactlessPaymentData> _Nonnull)buildAlternateContactlessPaymentData:(AlternateContactlessPaymentDataJson* _Nonnull)alternateContactlessPaymentData;

@end
