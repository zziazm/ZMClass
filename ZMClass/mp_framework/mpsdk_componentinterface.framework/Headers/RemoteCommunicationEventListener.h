/**
 *  Copyright (c) 2018, MasterCard International Incorporated and/or its
 *  affiliates. All rights reserved.
 *
 *  The contents of this file may only be used subject to the MasterCard
 *  Mobile Payment SDK for MCBP and/or MasterCard Mobile MPP UI SDK
 *  Materials License.
 *
 *  Please refer to the file LICENSE.TXT for full details.
 *
 *  TO THE EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
 *  WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 *  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *  NON INFRINGEMENT. TO THE EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 *  MASTERCARD OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 **/

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from RemoteCommunicationEventListener.djinni

#import <Foundation/Foundation.h>
@protocol DigitizedCard;
@class Exception;
@protocol SingleUseKey;
@class Exception;
@protocol DigitizedCard;
@protocol SingleUseKey;


/** Auto-generated Djinni interface for ::mpsdk::componentinterface::remotemanagement::RemoteCommunicationEventListener_t */
@protocol RemoteCommunicationEventListener

/**
 * 
 * callback invoked after card provision is done.
 * 
 * @param digitizedCardProfile the profile of the card
 * @param cardId               Identifier of the card
 * 
 * 
 */
- (void)onProvisionSucceeded:(id<DigitizedCard> _Nonnull)digitizedCardProfile
                      cardId:(NSString* _Nonnull)cardId;

/**
 * 
 * Event raised when a notify token provision result command has failed
 * 
 * @param cardId       Card_t Identifier for the card the notify token provision result command
 * was for
 * @param errorCode    Code identifying the error that occurred
 * @param errorMessage Error message describing the error that occurred
 * @param exception    Error exception thrown
 * 
 * 
 */
- (void)onProvisionFailure:(NSString* _Nonnull)cardId
                 errorCode:(NSString* _Nullable)errorCode
              errorMessage:(NSString* _Nullable)errorMessage
                 exception:(Exception* _Nullable)exception;

/**
 * 
 * Callback invoked after set Card_t Pin succeeded
 * 
 * 
 * 
 */
- (void)onSetCardPinSucceeded:(NSString* _Nonnull)cardId;

/**
 * 
 * Callback invoked after set card pin has failed
 * 
 * @param cardId            Identifier of card for which change pin failed
 * @param pinTriesRemaining Number of tries remaining
 * @param errorCode         The error code
 * @param errorMessage      Error message describing the error that occurred
 * @param exception         Error exception thrown
 * 
 * 
 */
- (void)onSetCardPinFailed:(NSString* _Nonnull)cardId
         pinTriesRemaining:(int32_t)pinTriesRemaining
                 errorCode:(NSString* _Nullable)errorCode
              errorMessage:(NSString* _Nullable)errorMessage
                 exception:(Exception* _Nullable)exception;

/**
 * 
 * Callback invoked after set wallet pin has failed
 * 
 * @param pinTriesRemaining Number of tries remaining
 * @param errorCode         The error code
 * @param errorMessage      Error message describing the error that occurred
 * @param exception         Error exception thrown
 * 
 * 
 */
- (void)onSetWalletPinFailed:(int32_t)pinTriesRemaining
                   errorCode:(NSString* _Nullable)errorCode
                errorMessage:(NSString* _Nullable)errorMessage
                   exception:(Exception* _Nullable)exception;

/**
 * 
 * Callback invoked after set Wallet Pin succeeded
 * 
 * 
 * 
 */
- (void)onSetWalletPinSucceeded;

/**
 * 
 * Callback invoked after change Card_t Pin succeeded
 * 
 * @param cardId Card_t Identifier for card whose pin has changed
 * 
 * 
 */
- (void)onChangeCardPinSucceeded:(NSString* _Nonnull)cardId;

/**
 * 
 * Callback invoked after set card pin has failed
 * 
 * @param cardId            Identifier of card for which change pin failed
 * @param pinTriesRemaining Number of tries remaining
 * @param errorCode         The error code
 * @param errorMessage      Error message describing the error that occurred
 * @param exception         Error exception thrown
 * 
 * 
 */
- (void)onChangeCardPinFailed:(NSString* _Nonnull)cardId
            pinTriesRemaining:(int32_t)pinTriesRemaining
                    errorCode:(NSString* _Nullable)errorCode
                 errorMessage:(NSString* _Nullable)errorMessage
                    exception:(Exception* _Nullable)exception;

/**
 * 
 * Callback invoked after change wallet pin has failed
 * 
 * @param pinTriesRemaining Number of tries remaining
 * @param errorCode         The error code
 * @param errorMessage      Error message describing the error that occurred
 * @param exception         Error exception thrown
 * 
 * 
 */
- (void)onChangeWalletPinFailed:(int32_t)pinTriesRemaining
                      errorCode:(NSString* _Nullable)errorCode
                   errorMessage:(NSString* _Nullable)errorMessage
                      exception:(Exception* _Nullable)exception;

/**
 * 
 * Callback invoked after change Wallet Pin succeeded
 * 
 * 
 * 
 */
- (void)onChangeWalletPinSucceeded;

/**
 * 
 * called by the SDK once the replenishment request succeeded successfully
 * 
 * @param cardId        Id for Card_t for which the new SUKs are available
 * @param requestId     Request Id with which the processing was being done
 * @param singleUseKeys interface for fetching the SUK
 * 
 * 
 */
- (void)onReplenishSucceeded:(NSString* _Nonnull)cardId
                   requestId:(NSString* _Nonnull)requestId
               singleUseKeys:(NSArray<id<SingleUseKey>>* _Nonnull)singleUseKeys;

/**
 * 
 * called in case the replenishment request could not complete successfully
 * 
 * @param cardId       Card_t for which the new SUKs are available
 * @param requestId    Request Id with which the processing was being done
 * @param errorCode    error code and description of the issue
 * @param errorMessage Error message describing the error that occurred
 * @param exception    Error exception thrown
 * 
 * 
 */
- (void)onReplenishFailed:(NSString* _Nonnull)cardId
                requestId:(NSString* _Nonnull)requestId
                errorCode:(NSString* _Nullable)errorCode
             errorMessage:(NSString* _Nullable)errorMessage
                exception:(Exception* _Nullable)exception;

/**
 * 
 * Event raised when a delete card fails
 * 
 * @param cardId       Identifier of the card
 * @param requestId    Request Id
 * @param errorCode    Error Code for why card was not deleted
 * @param errorMessage Error message describing the error that occurred
 * @param exception    Error exception thrown
 * 
 * 
 */
- (void)onDeleteCardFailed:(NSString* _Nonnull)cardId
                 requestId:(NSString* _Nonnull)requestId
                 errorCode:(NSString* _Nullable)errorCode
              errorMessage:(NSString* _Nullable)errorMessage
                 exception:(Exception* _Nullable)exception;

/**
 * 
 * Event raised when card is successfully deleted
 * 
 * @param cardId    Identifier of the card deleted
 * @param requestId Request Id
 * 
 * 
 */
- (void)onDeleteCardSuccess:(NSString* _Nonnull)cardId
                  requestId:(NSString* _Nonnull)requestId;

/**
 * 
 * Event raised when retrieval of task status is successful.
 * 
 * 
 * 
 */
- (void)onTaskStatusReceived:(NSString* _Nonnull)taskStatus;

/**
 * 
 * Event raised when retrieval of task status fails.
 * 
 * @param errorCode    A code identifying the error that occurred.
 * @param errorMessage Error message describing the error that occurred
 * @param exception    Error exception thrown
 * 
 * 
 */
- (void)onTaskStatusReceivedFailure:(NSString* _Nullable)errorCode
                       errorMessage:(NSString* _Nullable)errorMessage
                          exception:(Exception* _Nullable)exception;

/**
 * 
 * Event raised when system health with CMS-D fails.
 * 
 * @param errorCode    A code identifying the error that occurred.
 * @param errorMessage Error message describing the error that occurred
 * @param exception    Error exception thrown
 * 
 * 
 */
- (void)onSystemHealthFailure:(NSString* _Nullable)errorCode
                 errorMessage:(NSString* _Nullable)errorMessage
                    exception:(Exception* _Nullable)exception;

/**
 * 
 * Event raised when system health with CMS-D is successful
 * 
 * 
 * 
 */
- (void)onSystemHealthCompleted;

/**
 * 
 * Event raised when PIN has been reset for a particular card
 * 
 * @param cardId The identifier of the card whose PIN has been reset
 * 
 * 
 */
- (void)onCardPinReset:(NSString* _Nonnull)cardId;

/**
 * 
 * Event raised when wallet PIN has been reset
 * 
 * 
 * 
 */
- (void)onWalletPinReset;

/**
 * 
 * Event raised when a request session has completed successfully
 * 
 * 
 * 
 */
- (void)onRequestSessionSuccess;

/**
 * 
 * Event raised when a request session has failed
 * 
 * @param errorCode    Error code identifying the error
 * @param errorMessage Error message describing the error that occurred
 * @param exception    Error exception thrown
 * 
 * 
 */
- (void)onRequestSessionFailure:(NSString* _Nullable)errorCode
                   errorMessage:(NSString* _Nullable)errorMessage
                      exception:(Exception* _Nullable)exception;

/**
 * 
 * Event raised to provide taskId generated for card mobile pin
 * 
 * @param cardId cardId The identifier of the card whose PIN change is requested
 * @param taskId taskId The identifier of the task change mobile pin
 * 
 * 
 */
- (void)onChangeCardMobilePinStarted:(NSString* _Nonnull)cardId
                              taskId:(NSString* _Nonnull)taskId;

/**
 * 
 * Event raised to provide taskId generated for wallet pin
 * 
 * @param taskId taskId The identifier of the task change wallet pin
 * 
 * 
 */
- (void)onChangeWalletMobilePinStarted:(NSString* _Nonnull)taskId;

@end
