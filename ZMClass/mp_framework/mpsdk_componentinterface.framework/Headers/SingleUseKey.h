/**
 *  Copyright (c) 2018, MasterCard International Incorporated and/or its
 *  affiliates. All rights reserved.
 *
 *  The contents of this file may only be used subject to the MasterCard
 *  Mobile Payment SDK for MCBP and/or MasterCard Mobile MPP UI SDK
 *  Materials License.
 *
 *  Please refer to the file LICENSE.TXT for full details.
 *
 *  TO THE EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
 *  WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 *  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *  NON INFRINGEMENT. TO THE EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 *  MASTERCARD OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 **/

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from SingleUseKey.djinni

#import <Foundation/Foundation.h>


/**
 * Auto-generated Djinni interface for ::mpsdk::componentinterface::SingleUseKey_t
 * 
 * Single use key used for user and mobile device authentication.
 * 
 */
@protocol SingleUseKey

/**
 * 
 * Get the id of the Single Use Key.
 * 
 * @return the Single Use Key Id as Byte Array
 * 
 * 
 */
- (NSString* _Nullable)getId;

/**
 * 
 * Returns the info tag
 * 
 * @return transaction credential info
 * 
 * 
 */
- (NSData* _Nullable)getInfo;

/**
 * 
 * Get the Single Use Key for Contactless (User and Mobile Device).
 * 
 * @return The Single Use Key UMD for Contactless as Byte Array
 * 
 * 
 */
- (NSData* _Nullable)getSukContactlessUmd;

/**
 * 
 * Get the Single Use Key for Remote Payment (User and Mobile Device).
 * 
 * @return The Single Use Key UMD for Remote Payment as Byte Array
 * 
 * 
 */
- (NSData* _Nullable)getSukRemotePaymentUmd;

/**
 * 
 * Get the Session Key for Contactless (Mobile Device).
 * 
 * @return The Session Key MD for Contactless as Byte Array
 * 
 * 
 */
- (NSData* _Nullable)getSessionKeyContactlessMd;

/**
 * 
 * Get the Session Key for Remote Payment (Mobile Device).
 * 
 * @return The Session Key MD for Remote Payment as Byte Array
 * 
 * 
 */
- (NSData* _Nullable)getSessionKeyRemotePaymentMd;

/**
 * 
 * Get the Session Key for Contactless (Mobile Device).
 * 
 * @return The Session Key UMD for Contactless as Byte Array
 * 
 * 
 */
- (NSData* _Nullable)getSessionKeyContactlessUmd;

/**
 * 
 * Get the Session Key for Remote Payment (Mobile Device).
 * 
 * @return The Session Key MD for Remote Payment as Byte Array
 * 
 * 
 */
- (NSData* _Nullable)getSessionKeyRemotePaymentUmd;

/**
 * 
 * Get the ICC Dynamic Number for this set of keys.
 * 
 * @return the ICC Dynamic Number
 * 
 * 
 */
- (NSData* _Nullable)getIdn;

/**
 * 
 * Get the Application Transaction Counter (ATC) of this single use key.
 * 
 * @return The ATC of the single use key as Byte Array
 * 
 * 
 */
- (int32_t)getAtc;

/**
 * 
 * Get the hash of this single use key.
 * 
 * @return The Sha-256 hash of the single use key as Byte Array
 * 
 * 
 */
- (NSData* _Nullable)getHash;

/**
 * 
 * Clear contents of object.
 * 
 * 
 * 
 */
- (void)wipe;

/**
 * 
 * Updates the status of tis SingleUseKey_t
 * 
 * @param status the new {@code Status}
 * 
 * 
 */
- (void)setStatus:(int32_t)status;

/**
 * 
 * The date/time stamp for this status. For UNUSED_ACTIVE credentials, the timestamp must be
 * the current time as the status is being reported. For used or discarded credentials, the
 * timestamp must be the time when the credentials were used or discarded.
 * Must be expressed in ISO 8601 extended format as one of the following:
 * YYYY-MM-DDThh:mm:ss[.sss]Z
 * YYYY-MM-DDThh:mm:ss[.sss]ï¿½hh:mm
 * Where [.sss] is optional and can be 1 to 3 digits.
 * 
 * @return String
 * 
 * 
 */
- (NSString* _Nullable)getTimestamp;

@end
