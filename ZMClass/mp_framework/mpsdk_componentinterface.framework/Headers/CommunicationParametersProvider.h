/**
 *  Copyright (c) 2018, MasterCard International Incorporated and/or its
 *  affiliates. All rights reserved.
 *
 *  The contents of this file may only be used subject to the MasterCard
 *  Mobile Payment SDK for MCBP and/or MasterCard Mobile MPP UI SDK
 *  Materials License.
 *
 *  Please refer to the file LICENSE.TXT for full details.
 *
 *  TO THE EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
 *  WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 *  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *  NON INFRINGEMENT. TO THE EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 *  MASTERCARD OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 **/

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from CommunicationParametersProvider.djinni

#import <Foundation/Foundation.h>
@protocol RMKekEncryptedMobileKeys;
@protocol RMKekEncryptedMobileKeys;


/**
 * Auto-generated Djinni interface for ::mpsdk::componentinterface::crypto::CommunicationParametersProvider_t
 * 
 * Allows the Remote Management module to request communication parameters from the SDK
 * 
 */
@protocol CommunicationParametersProvider

/**
 * 
 * The registration response data will contain the mobile keys required by the SDK in order to
 * communicate with the Remote Management Service. This data can be provided here in order for
 * it to be persisted to the database
 * 
 * @param encryptedMobileKeys the mobile keys necessary for communication and encryption
 * @param remoteManagementUrl the URL for the CMS-D
 * @exception GeneralSecurityException If something goes wrong inside crypto engine
 * 
 * 
 */
- (void)setCommunicationParameters:(id<RMKekEncryptedMobileKeys> _Nonnull)encryptedMobileKeys
               remoteManagementUrl:(NSString* _Nonnull)remoteManagementUrl error:(NSError* _Nullable __autoreleasing * _Nullable)error;

/**
 * 
 * Used to retrieve a set of RM KEK protected mobile keys
 * 
 * @return the protected mobile keys
 * @exception GeneralSecurityException If something goes wrong inside crypto engine
 * 
 * 
 */
- (id<RMKekEncryptedMobileKeys> _Nullable)getEncryptedMobileKeys:(NSError* _Nullable __autoreleasing * _Nullable)error NS_SWIFT_NOTHROW;

/**
 * 
 * Used to retrieve the location of the Remote Management Service
 * 
 * @return the URL of the remote management service
 * 
 * 
 */
- (NSString* _Nonnull)getRemoteManagementServiceUrl;

/**
 * 
 * Used by the Remote Management module to check if the SDK has communication parameters
 * available.
 * 
 * @return true if communication parameters are available for use, false otherwise
 * 
 * 
 */
- (BOOL)hasCommunicationParameters;

@end
