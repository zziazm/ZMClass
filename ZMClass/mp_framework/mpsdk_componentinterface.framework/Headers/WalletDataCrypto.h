/**
 *  Copyright (c) 2018, MasterCard International Incorporated and/or its
 *  affiliates. All rights reserved.
 *
 *  The contents of this file may only be used subject to the MasterCard
 *  Mobile Payment SDK for MCBP and/or MasterCard Mobile MPP UI SDK
 *  Materials License.
 *
 *  Please refer to the file LICENSE.TXT for full details.
 *
 *  TO THE EXTENT PERMITTED BY LAW, THE SOFTWARE IS PROVIDED "AS IS", WITHOUT
 *  WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
 *  WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 *  NON INFRINGEMENT. TO THE EXTENT PERMITTED BY LAW, IN NO EVENT SHALL
 *  MASTERCARD OR ITS AFFILIATES BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 *  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 *  IN THE SOFTWARE.
 **/

// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from WalletDataCrypto.djinni

#import <Foundation/Foundation.h>
@class WalletDekEncryptedData;
@class CustomEncryptedData;
@class CustomEncryptedData;
@class WalletDekEncryptedData;


/**
 * Auto-generated Djinni interface for ::mpsdk::componentinterface::crypto::WalletDataCrypto_t
 * 
 * Provides a way to encrypt sensitive Wallet data
 * 
 */
@protocol WalletDataCrypto

/**
 * 
 * Encrypts the data using the current wallet encryption key
 * 
 * @param dataToBeEncrypted The data to be encrypted
 * @return Data protected by the wallet data encryption key
 * 
 * 
 */
- (WalletDekEncryptedData* _Nonnull)encryptWalletData:(CustomEncryptedData* _Nonnull)dataToBeEncrypted;

/**
 * 
 * Encrypts the data using the specified wallet encryption key
 * 
 * @param walletDataKeyId   Id of the Wallet Data Key to use
 * @param dataToBeEncrypted The data to be encrypted
 * @return Data protected by the wallet data encryption key
 * 
 * 
 */
- (WalletDekEncryptedData* _Nonnull)encryptWalletDataWithKeyId:(NSData* _Nonnull)walletDataKeyId
                                                        dataToBeEncrypted:(CustomEncryptedData* _Nonnull)dataToBeEncrypted;

@end
